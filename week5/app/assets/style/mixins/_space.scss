// spaces
@mixin make-spacing($name, $space, $map: $spacies, $dirction: null, $infix: null) {
  $dir-fix: null;
  @if($dirction != null) {
      $dir-fix: str-slice($dirction, 0, 1);
      $dirction: "-#{$dirction}"
  }
  .#{str-slice($name, 0, 1)}#{$dir-fix}#{$infix}-#{$space} {
      #{$name}#{$dirction}: map-get($map, $space);
  }
}

@mixin make-direction-spacing($name, $space, $map: $spacies, $dirction: null, $infix: null) {
  $dir-fix: null;
  @if($dirction != null) {
      $dir-fix: str-slice($dirction, 0, 1);
      $dirction: "-#{$dirction}"
  }
  .#{str-slice($name, 0, 1)}x#{$dir-fix}#{$infix}-#{$space} {
      #{$name}-left: map-get($map, $space);
      #{$name}-right: map-get($map, $space);
  }
  .#{str-slice($name, 0, 1)}y#{$dir-fix}#{$infix}-#{$space} {
      #{$name}-top: map-get($map, $space);
      #{$name}-bottom: map-get($map, $space);
  }
}

@mixin generatorSpaces($infix: null) {
  $types: ('margin', 'padding');
  @each $type in $types {
    @each $space in map-keys($spacies) {
      @if($type == margin and $space == auto) {
        @include make-spacing($type, $space, $spacies, null, $infix);
        @include make-direction-spacing($type, $space, $spacies, null, $infix);
        @each $dir in $directions {
          @if($dir != center) {
            @include make-spacing($type, $space, $spacies, $dir, $infix);
          }
        }
      } @else if ($space != auto) {
        @include make-spacing($type, $space, $spacies, null, $infix);
        @include make-direction-spacing($type, $space, $spacies, null, $infix);
        @each $dir in $directions {
          @if($dir != center) {
            @include make-spacing($type, $space, $spacies, $dir, $infix);
          }
        }
      }
    }
  }
}